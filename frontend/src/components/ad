import React, { useState } from "react";
import { useDispatch, useSelector } from "react-redux";
import { sendBookingForm } from "../slices/bookingSlice";

const inputGroups = [
  { name: "firstName", type: "text", placeholder: "First name" },
  { name: "lastName", type: "text", placeholder: "Last name" },
  { name: "email", type: "email", placeholder: "Email" },
  { name: "phone", type: "tel", placeholder: "Phone number" },
  { name: "address", type: "text", placeholder: "Address" },
  { name: "city", type: "text", placeholder: "City" },
  { name: "state", type: "text", placeholder: "State" },
  { name: "zipCode", type: "text", placeholder: "Zip Code" },
];

const BookingForm = () => {
  const dispatch = useDispatch();
  const [formState, setFormState] = useState(
    inputGroups.reduce((acc, curr) => ({ ...acc, [curr.name]: "" }), {
      message: "",
      services: [],
      image: null,
    })
  );
  const [selectedImage, setSelectedImage] = useState(null);

  const handleChange = (e) => {
    setFormState({ ...formState, [e.target.name]: e.target.value });
  };

  const handleServiceChange = (e) => {
    const { value, checked } = e.target;
    setFormState((prev) => ({
      ...prev,
      services: checked
        ? [...prev.services, value]
        : prev.services.filter((s) => s !== value),
    }));
  };

  const handleImageChange = (e) => {
    const file = e.target.files[0];
    if (file) {
      setSelectedImage(file);
      setFormState((prev) => ({ ...prev, image: file }));
    }
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    const data = new FormData();
    for (const key in formState) {
      if (key === "services") {
        formState.services.forEach((service) =>
          data.append("services", service)
        );
      } else {
        data.append(key, formState[key]);
      }
    }

    dispatch(sendBookingForm(data));
  };

  const services = [
    "Residential Junk",
    "Commercial Junk",
    "Moving Junk",
    "Storage Junk",
    "Renovation Junk",
    "Disaster Junk",
    "Cleanout services",
    "Bush Yard Waste Removal",
    "Other",
  ];

  return (
    <div className="bg-white flex flex-col md:flex-row">
      {/* Left: Form */}
      <div className="flex-1">
        <h3 className="text-2xl md:text-4xl  font-bold mb-6 text-center">
          Get a Quote
        </h3>
        <form onSubmit={handleSubmit} className="space-y-4">
          {inputGroups.map((input, i) => (
            <input
              key={i}
              type={input.type}
              name={input.name}
              placeholder={input.placeholder}
              className="w-full px-4 py-2 border rounded"
              value={formState[input.name]}
              onChange={handleChange}
            />
          ))}

          <label className="block font-medium mb-2">Type of Service</label>
          <div className="grid grid-cols-2 gap-2">
            {services.map((service, index) => (
              <label key={index}>
                <input
                  type="checkbox"
                  value={service}
                  checked={formState.services.includes(service)}
                  onChange={handleServiceChange}
                  className="mr-2"
                />
                {service}
              </label>
            ))}
          </div>

          <textarea
            name="message"
            placeholder="Type your message..."
            value={formState.message}
            onChange={handleChange}
            className="w-full h-24 p-2 border border-gray-300 rounded resize-none mb-4"
          />

          <div>
            <label className="block text-gray-700 font-semibold mb-2">
              Upload Image
            </label>
            <div
              className="relative border-2 border-dashed border-gray-300 rounded-sm p-6 text-center cursor-pointer hover:border-blue-400 transition"
              onClick={() => document.getElementById("imageUpload").click()}
            >
              {selectedImage ? (
                <img
                  src={URL.createObjectURL(selectedImage)}
                  alt="Preview"
                  className="object-cover mx-auto max-h-40"
                />
              ) : (
                <div className="text-gray-400">
                  <svg
                    className="w-12 h-12 mx-auto mb-2"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      strokeLinecap="round"
                      strokeLinejoin="round"
                      strokeWidth={2}
                      d="M7 16V4m0 0l3 3m-3-3L4 7m13 13h-3m0 0v-6m0 6l-3-3m3 3l3-3"
                    />
                  </svg>
                  <p className="text-sm">Click to upload image</p>
                </div>
              )}
              <input
                id="imageUpload"
                type="file"
                accept="image/*"
                onChange={handleImageChange}
                className="hidden"
              />
            </div>
          </div>
          {/* not robot  */}
          <div className="mb-4 max-w-sm ">
            <div className="flex items-center space-x-2 bg-white border border-gray-300 rounded shadow-sm p-2">
              {/* Left side: checkbox and label */}
              <div className="flex items-center">
                <input
                  type="checkbox"
                  id="captcha"
                  className="mr-3 h-5 w-5 text-green-600 border-gray-400 rounded"
                />
                <label
                  htmlFor="captcha"
                  className="text-sm text-gray-800 font-medium"
                >
                  I'm not a robot
                </label>
              </div>

              {/* Right side: reCAPTCHA icon & text */}
              <div className="flex flex-col items-center text-[10px] text-gray-500">
                <img src={captcha} alt="" className="h-10" />
                {/* <div>reCAPTCHA</div> */}
                <div className="flex gap-1">
                  <p className="underline">Privacy</p> Â·
                  <p className="underline">Terms</p>
                </div>
              </div>
            </div>
          </div>
          <button
            type="submit"
            className="w-full bg-green-600 text-white py-2 rounded hover:bg-green-700"
            onClick={handleSubmit}
          >
            Submit
          </button>
        </form>
      </div>
    </div>
  );
};

export default BookingForm;
